# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=2000
HISTFILESIZE=4000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -la --group-directories-first'
alias la='ls -A'
alias l='ls -CF'
alias python='python3'

# S3 alias
alias s3='cd /home/olivier/Documents/heig/s3/'
alias poo='cd /home/olivier/Documents/heig/s3/poo/labo'
alias pst='cd /home/olivier/Documents/heig/s3/pst/'
alias bdr='cd /home/olivier/Documents/heig/s3/bdr/projet'
alias api='cd /home/olivier/Documents/heig/s3/api/labo'
alias bs='cd /home/olivier/projet/beausite'
alias projet='cd /home/olivier/projet/'

# S4 alias
alias s4='cd /home/olivier/Documents/heig/s4/'
alias cld='cd /home/olivier/Documents/heig/s4/cld'
alias mac='cd /home/olivier/Documents/heig/s4/mac'
alias arn='cd /home/olivier/Documents/heig/s4/arn/labo'
alias gre='cd /home/olivier/Documents/heig/s4/gre'
alias dil='cd /home/olivier/Documents/heig/s4/dil/labo'
alias god='cd /home/olivier/Documents/heig/s4/god'
alias pcd='cd /home/olivier/Documents/heig/s4/pcd/labo'
alias vid='cd /home/olivier/Documents/heig/s4/vid'

# S5 alias
alias s5='cd /home/olivier/Documents/heig/s5/ && ls -lag'
alias apn='cd /home/olivier/Documents/heig/s5/apn'
alias apv='cd /home/olivier/Documents/heig/s5/apv'
alias bui='cd /home/olivier/Documents/heig/s5/bui'
alias cnm='cd /home/olivier/Documents/heig/s5/cnm'
alias eal='cd /home/olivier/Documents/heig/s5/eal'
alias gml='cd /home/olivier/Documents/heig/s5/gml'
alias ist='cd /home/olivier/Documents/heig/s5/ist'
alias sio='cd /home/olivier/Documents/heig/s5/sio'

# S6 alias
alias s6='cd /home/olivier/Documents/heig/s6/ && ls -lag'
alias tal='cd /home/olivier/Documents/heig/s6/tal'
alias min='cd /home/olivier/Documents/heig/s6/min'
alias iaa='cd /home/olivier/Documents/heig/s6/iaa'
alias tb='cd /home/olivier/Documents/heig/s6/tb'
alias pi='cd /home/olivier/projet/pi/monorepo'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# # enable programmable completion features (you don't need to enable
# # this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# # sources /etc/bash.bashrc).
# if ! shopt -oq posix; then
#   if [ -f /usr/share/bash-completion/bash_completion ]; then
#     . /usr/share/bash-completion/bash_completion
#   elif [ -f /etc/bash_completion ]; then
#     . /etc/bash_completion
#   fi
# fi

# <<< ssh agent <<<
env=~/.ssh/agent.env

agent_load_env () { test -f "$env" && . "$env" >| /dev/null ; }

agent_start () {
    (umask 077; ssh-agent >| "$env")
    . "$env" >| /dev/null ; }

agent_load_env

# agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2=agent not running
agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)

if [ ! "$SSH_AUTH_SOCK" ] || [ $agent_run_state = 2 ]; then
    agent_start
    ssh-add
elif [ "$SSH_AUTH_SOCK" ] && [ $agent_run_state = 1 ]; then
    ssh-add
fi

unset env

eval $(ssh-agent -s) 1> /dev/null
ssh-add ~/.ssh/rocketpc 2> /dev/null
# <<< ssh agent <<<

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/olivier/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/olivier/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/olivier/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/olivier/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# CUDA
export PATH="/usr/local/cuda/bin:$PATH"  
export LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"

export PATH="$PATH":"$HOME/.pub-cache/bin"
. "$HOME/.cargo/env"


export ANDROID_HOME="~/Downloads/cmdline-tools"
export ANDROID_SDK_ROOT="~/Downloads/cmdline-tools"
